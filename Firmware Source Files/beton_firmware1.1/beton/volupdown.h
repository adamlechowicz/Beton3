#define speaker_width 24
#define modifier_width 16

//XBM format speaker icon
static const unsigned char speaker[] U8X8_PROGMEM = {
 0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x7c,0x00,0x00,0x7e,0x00,0x00,0x7f,
 0x00,0x80,0x7f,0x00,0xc0,0x7f,0x00,0xe0,0x7f,0x00,0xf0,0x7f,0xfc,0xff,0x7f,
 0xfe,0xff,0x7f,0xfe,0xff,0x7f,0xfe,0xff,0x7f,0xfe,0xff,0x7f,0xfe,0xff,0x7f,
 0xfe,0xff,0x7f,0xfe,0xff,0x7f,0xfe,0xff,0x7f,0xfe,0xff,0x7f,0xfe,0xff,0x7f,
 0xfe,0xff,0x7f,0xfe,0xff,0x7f,0xfc,0xff,0x7f,0x00,0xf0,0x7f,0x00,0xe0,0x7f,
 0x00,0xc0,0x7f,0x00,0x80,0x7f,0x00,0x00,0x7f,0x00,0x00,0x7e,0x00,0x00,0x7c,
 0x00,0x00,0x38,0x00,0x00,0x00 };

//XBM format "plus" symbol
static const unsigned char plus[] U8X8_PROGMEM = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x80,0x07,0x80,0x07,0x80,0x07,0x80,0x07,0x80,0x07,0xfc,0xff,0xfc,0xff,
 0xfc,0xff,0xfc,0xff,0x80,0x07,0x80,0x07,0x80,0x07,0x80,0x07,0x80,0x07,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00 };

//XBM format "minus" symbol
static const unsigned char minus[] U8X8_PROGMEM = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0xff,0xfc,0xff,
 0xfc,0xff,0xfc,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00 };

//XBM format one sound wave icon
static const unsigned char sound1[] U8X8_PROGMEM = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x1c,0x00,0x18,0x00,0x38,0x00,0x30,0x00,
 0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x38,0x00,0x18,0x00,0x1c,0x00,0x0c,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00 };

//XBM format two sound waves icon
static const unsigned char sound2[] U8X8_PROGMEM = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,
 0x00,0xc0,0x00,0x80,0x01,0x8c,0x01,0x1c,0x03,0x18,0x03,0x38,0x07,0x30,0x06,
 0x30,0x06,0x30,0x06,0x30,0x06,0x30,0x06,0x38,0x07,0x18,0x03,0x1c,0x03,0x8c,
 0x01,0x80,0x01,0xc0,0x00,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00 };

//XBM format three sound waves icon
static const unsigned char sound3[] U8X8_PROGMEM = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x1c,0x00,0x18,0xc0,
 0x30,0xc0,0x30,0x80,0x61,0x8c,0x61,0x1c,0xc3,0x18,0xc3,0x38,0xc7,0x30,0xc6,
 0x30,0xc6,0x30,0xc6,0x30,0xc6,0x30,0xc6,0x38,0xc7,0x18,0xc3,0x1c,0xc3,0x8c,
 0x61,0x80,0x61,0xc0,0x30,0xc0,0x30,0x00,0x18,0x00,0x1c,0x00,0x0c,0x00,0x00,
 0x00,0x00,0x00,0x00 };

//XBM format X (mute) icon
static const unsigned char mute[] U8X8_PROGMEM = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x1c,0xe0,0x3c,0xf0,0x7c,0xf8,0xf8,0x7c,0xf0,0x3f,0xe0,0x1f,
 0xc0,0x0f,0xc0,0x0f,0xe0,0x1f,0xf0,0x3f,0xf8,0x7c,0x7c,0xf8,0x3c,0xf0,0x1c,
 0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00 };


 void drawPlus() {
  u8g2.firstPage();  do {
    switch (animation_state) {
      //this switch statement decides which frame of the animation to draw based on the number in animation_state.
      case 0 ... 8:
        u8g2.setContrast(255);
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(68, 1, modifier_width, icon_height, plus);
        break;
      case 9 ... 12:
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, 0, modifier_width, icon_height, sound1);
        break;
      case 13 ... 16:
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, 0, modifier_width, icon_height, sound2);
        break;
      case 17 ... 22:
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, 0, modifier_width, icon_height, sound3);
        break;
      case 23 ... 33:
        u8g2.setContrast(0);
        u8g2.drawXBMP(44, 69-(animation_state*3), speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, 69-(animation_state*3), modifier_width, icon_height, sound3);
        break;
      case 34:
        animation = 0;
        break;
    }
  } while ( u8g2.nextPage() );
}


 void drawMute() {
  u8g2.firstPage();  do {
    switch (animation_state) {
      //this switch statement decides which frame of the animation to draw based on the number in animation_state.
      case 0 ... 10:
        u8g2.setContrast(255);
        u8g2.drawXBMP(44, 20-(animation_state*2), speaker_width, icon_height, speaker);
        u8g2.drawXBMP(68, -30+(animation_state*3), modifier_width, icon_height, mute);
        break;
      case 11 ... 15:
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(68, 0, modifier_width, icon_height, mute);
        break;
      case 16 ... 26:
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(68, -48+(animation_state*3), modifier_width, icon_height, mute);
        u8g2.drawXBMP(69, -78+(animation_state*3), modifier_width, icon_height, sound2);
        break;
      case 27 ... 31:
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, 0, modifier_width, icon_height, sound2);
        break;
      case 32 ... 40:
        u8g2.drawXBMP(44, 96-(animation_state*3), speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, -96+(animation_state*3), modifier_width, icon_height, sound2);
        break;
      case 41:
        animation = 0;
        break;
    }
  } while ( u8g2.nextPage() );
}


 void drawMinus() {
  u8g2.firstPage();  do {
    switch (animation_state) {
      //this switch statement decides which frame of the animation to draw based on the number in animation_state.
      case 0 ... 8:
        u8g2.setContrast(255);
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(68, 1, modifier_width, icon_height, minus);
        break;
      case 9 ... 12:
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, 0, modifier_width, icon_height, sound3);
        break;
      case 13 ... 16:
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, 0, modifier_width, icon_height, sound2);
        break;
      case 17 ... 22:
        u8g2.drawXBMP(44, 0, speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, 0, modifier_width, icon_height, sound1);
        break;
      case 23 ... 33:
        u8g2.setContrast(0);
        u8g2.drawXBMP(44, -69+(animation_state*3), speaker_width, icon_height, speaker);
        u8g2.drawXBMP(69, -69+(animation_state*3), modifier_width, icon_height, sound1);
        break;
      case 34:
        animation = 0;
        break;
    }
  } while ( u8g2.nextPage() );
}
